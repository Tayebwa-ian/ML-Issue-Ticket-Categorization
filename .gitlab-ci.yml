stages:
   - setup
   - test

variables:
   MYSQL_ROOT_PASSWORD: root_password  # MySQL root password for setup
   MYSQL_USER: ticket_test
   MYSQL_PASSWORD: ticket_test_pwd
   MYSQL_DATABASE: ticket_test_db
   APP_ENV_NAME: ticket_env

image: mysql:8.4.0-oraclelinux8

setup_MySQL_Server:
   stage: setup
   script:
      - mysql --version
      - mysql -u root -p$MYSQL_ROOT_PASSWORD < create_test_db.sql  # Run a script to create Database
      - mysql -u root -p$MYSQL_ROOT_PASSWORD -e "USE $MYSQL_DATABASE;
      - mysql -u root -p$MYSQL_ROOT_PASSWORD -e "SHOW TABLES;"  # Verify the database

# Define a job to install dependencies with Conda
install_dependencies:
   image: python:3.11-slim-buster
   stage: setup
   script:
      - pip install --upgrade pip
      - python -m venv $APP_ENV_NAME
      - source $APP_ENV_NAME/bin/activate  # Activate virtual environment
      - pip install -r requirements.txt  # Install Python dependencies (make sure to have this file)

# Define the job to run tests
run_tests:
   stage: test
   script:
      - echo "Running tests"
      - source $APP_ENV_NAME/bin/activate  # Activate virtual environment
      - export TICKET_ENV=test  # Set environment variables
      - export TICKET_MYSQL_USER=$MYSQL_USER
      - export TICKET_MYSQL_PWD=$MYSQL_PASSWORD
      - export TICKET_MYSQL_HOST=localhost
      - export TICKET_MYSQL_DB=$MYSQL_DATABASE
      - python3 -m unittest  # Run the tests
   dependencies:
      # Ensure this job runs after dependencies are installed
      - install_dependencies
      - setup_MySQL_Server
   after_script:
      - deactivate  # Deactivate the Conda environment after tests are done
