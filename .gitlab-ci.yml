stages:
   - setup
   - test

variables:
   MYSQL_ROOT_PASSWORD: root_password  # MySQL root password for setup
   MYSQL_USER: ticket_test
   MYSQL_PASSWORD: ticket_test_pwd
   MYSQL_DATABASE: ticket_test_db
   CONDA_ENV_NAME: ticket_env

# Use a lightweight Python image with Conda support
image: continuumio/miniconda3:latest

before_script:
   # Update and install necessary dependencies
   - apt-get update && apt-get install -y mysql-server
   - echo "Setting up MySQL"
   - service mysql start
   - sudo mysql --version
   - sudo mysql -u root -p$MYSQL_ROOT_PASSWORD < create_test_db.sql  # Run your SQL script
   - sudo mysql -u root -p$MYSQL_ROOT_PASSWORD -e "USE $MYSQL_DATABASE;
   - sudo mysql -u root -p$MYSQL_ROOT_PASSWORD -e "SHOW TABLES;"  # Verify the database

# Define a job to install dependencies with Conda
install_dependencies:
   stage: setup
   script:
      - echo "Setting up Conda environment"
      - conda create -n $CONDA_ENV_NAME python=3.8 -y  # Create Conda environment with Python 3.8 (modify if needed)
      - source activate $CONDA_ENV_NAME  # Activate the environment
      - pip install -r requirements.txt  # Install Python dependencies (make sure to have this file)
      - conda list  # Check installed dependencies

# Define the job to run tests
run_tests:
   stage: test
   script:
      - echo "Running tests"
      - source activate $CONDA_ENV_NAME  # Activate the Conda environment
      - export TICKET_ENV=test  # Set environment variables
      - export TICKET_MYSQL_USER=$MYSQL_USER
      - export TICKET_MYSQL_PWD=$MYSQL_PASSWORD
      - export TICKET_MYSQL_HOST=localhost
      - export TICKET_MYSQL_DB=$MYSQL_DATABASE
      - python3 -m unittest  # Run the tests
   dependencies:
      - install_dependencies  # Ensure this job runs after dependencies are installed
   after_script:
      - deactivate  # Deactivate the Conda environment after tests are done
